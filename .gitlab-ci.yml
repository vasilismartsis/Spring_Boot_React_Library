# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

image: gradle:alpine

before_script:
  - echo $(pwd)
  - GRADLE_USER_HOME="$(pwd)/Library_Back_End/.gradle"
  - export GRADLE_USER_HOME

# stages:
#   - build
#   - test
#   - packaging     

stages:
  - build
  - run  

build:
  stage: build
  script:
    - cd  Library_Back_End
    - ./gradlew clean build
  artifacts:
    paths:
    - Library_Back_End/build/  

# run:
#   stage: run
#   dependencies:
#     - build
#   services:
#     - name: "mcr.microsoft.com/mssql/server" # Use the MSSQL Docker image as a service
#       alias: sql-server
#   variables:
#     MSSQL_SA_PASSWORD: "B16301850b"  # Set the SA password
#     SPRING_DATASOURCE_URL: "jdbc:sqlserver://sql-server:1433;encrypt=true;trustServerCertificate=true;DB_CLOSE_ON_EXIT=FALSE"  # Adjust the DB URL
#     SPRING_DATASOURCE_USERNAME: "sa"
#     SPRING_DATASOURCE_PASSWORD: "B16301850b"  # Use the same password as MSSQL_SA_PASSWORD
#   script:
#     - cd Library_Back_End
#     - java -jar build/libs/Library_Back_End-0.0.1-SNAPSHOT.jar    

run:
  stage: run
  dependencies:
    - build
  services:
    - name: "mcr.microsoft.com/mssql/server" # Use the MSSQL Docker image as a service
      alias: sql-server
  variables:
    MSSQL_SA_PASSWORD: "B16301850b"  # Set the SA password
    spring.datasource.url: "jdbc:sqlserver://sql-server;encrypt=true;trustServerCertificate=true;DB_CLOSE_ON_EXIT=FALSE"
  script:
    - cd Library_Back_End
    - java -jar build/libs/Library_Back_End-0.0.1-SNAPSHOT.jar

# dockerize:
#   stage: test
#   services:
#     - docker:20.10.16-dind
#   variables:
#     DOCKER_TSL_CERTDIR: "/certs"
#   script:    
#     - docker-compose up --build -d
#   cache:
#     key: "$CI_COMMIT_REF_NAME"
#     policy: pull
#     paths:
#       - build
#       - .gradle

# test:
#   stage: test
#   services:
#     - docker:20.10.16-dind
#   variables:
#     DOCKER_TSL_CERTDIR: "/certs"
#   script:    
#     - cd  Library_Back_End
#     - gradle check
#   cache:
#     key: "$CI_COMMIT_REF_NAME"
#     policy: pull
#     paths:
#       - build
#       - .gradle

# dockerize-backend:
#   stage: packaging
#   image: docker:20.10.16
#   services:
#     - docker:20.10.16-dind
#   script:
#     - docker ps