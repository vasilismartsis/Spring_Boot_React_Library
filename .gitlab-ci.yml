# This file is a template, and might need editing before it works on your project.
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Gradle.gitlab-ci.yml

# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

image: gradle:alpine
      
# stages:
#   - build
#   - test
#   - packaging      

before_script:
  - echo $(pwd)
  - GRADLE_USER_HOME="$(pwd)/Library_Back_End/.gradle"
  - export GRADLE_USER_HOME
  - echo $(GRADLE_USER_HOME)

build image:
  image: docker
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_TAG: $CI_COMMIT_SHA
  script:
    - docker build -t my-spring-app:$DOCKER_IMAGE_TAG .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/my-spring-app:$DOCKER_IMAGE_TAG

build:
  stage: build
  script:
    - cd  Library_Back_End
    - gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

test:
  stage: test
  script:     
    - cd  Library_Back_End
    - gradle check
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle

deploy:
  stage: deploy
  script: echo "Define your deployment script!"
  environment: production

# dockerize-backend:
#   stage: packaging
#   image: docker:20.10.16
#   services:
#     - docker:20.10.16-dind
#   script:
#     - docker ps